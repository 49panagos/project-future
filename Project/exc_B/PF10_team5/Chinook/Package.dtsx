<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/7/2024 1:43:47 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-PFFJFJN"
  DTS:CreatorName="DESKTOP-PFFJFJN\Αφροδίτη"
  DTS:DTSID="{5B96D3EA-8EA2-4C41-911B-309E4148BECC}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5314.0"
  DTS:LocaleID="1032"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="5"
  DTS:VersionGUID="{652418D0-4EC0-4215-87FD-946768F5F75A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-PFFJFJN.Chinook]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CD516DD4-880F-4EBD-BBA6-69CBC5D92280}"
      DTS:ObjectName="DESKTOP-PFFJFJN.Chinook">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-PFFJFJN;Initial Catalog=Chinook;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{CD516DD4-880F-4EBD-BBA6-69CBC5D92280}DESKTOP-PFFJFJN.Chinook;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DESKTOP-PFFJFJN.ChinookStaging]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DC9E035B-7FD1-4203-87D3-C62D94CD3A76}"
      DTS:ObjectName="DESKTOP-PFFJFJN.ChinookStaging">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=DESKTOP-PFFJFJN;Initial Catalog=ChinookStaging;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{DC9E035B-7FD1-4203-87D3-C62D94CD3A76}DESKTOP-PFFJFJN.ChinookStaging;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\delta loading"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E4BA47B3-6679-4906-A36A-02AF4FCA838C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="delta loading"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DC9E035B-7FD1-4203-87D3-C62D94CD3A76}"
          SQLTask:SqlStatementSource="INSERT INTO [ChinookDW].[dbo].FactSales(&#xA;    InvoiceId, TrackKey, CustomerKey, EmployeeKey, InvoiceDateKey, UnitPrice)&#xA;SELECT s.InvoiceId,&#xA;    t.TrackKey,&#xA;    c.CustomerKey,&#xA;    e.EmployeeKey,&#xA;    CAST(FORMAT(s.InvoiceDate, 'yyyyMMdd') AS INT),&#xA;    s.UnitPrice&#xA;FROM &#xA;&#x9;ChinookStaging.dbo.Sales AS s&#xA;&#x9;JOIN [ChinookDW].[dbo].[DimCustomer] AS c ON c.CustomerID = s.CustomerID and c.RowIsCurrent=1&#xA;&#x9;JOIN [ChinookDW].[dbo].[DimEmployee] AS e ON e.EmployeeID = s.EmployeeID and c.RowIsCurrent=1&#xA;&#x9;JOIN [ChinookDW].[dbo].[DimTrack] AS t ON t.TrackID = s.TrackID and c.RowIsCurrent=1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DW"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{21B25DD7-62FA-487F-A471-E4DD424A48FD}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="DW"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DC9E035B-7FD1-4203-87D3-C62D94CD3A76}"
          SQLTask:SqlStatementSource="USE master&#xA;GO&#xA;&#xA;if exists (select * from sysdatabases where name='ChinookDW')&#xA;&#x9;&#x9;alter database ChinookDW set single_user with rollback immediate&#xA;&#x9;&#x9;drop database ChinookDW&#xA;go&#xA;&#xA;&#xA;CREATE DATABASE ChinookDW&#xA;GO&#xA;&#xA;USE ChinookDW&#xA;GO&#xA;&#xA;&#xA;DROP TABLE IF EXISTS DimEmployee;&#xA;DROP TABLE IF EXISTS DimCustomer;&#xA;DROP TABLE IF EXISTS DimTrack;&#xA;DROP TABLE IF EXISTS FactSales;&#xA;&#xA;-- DimEmployee dimension will need to include:&#xA;CREATE TABLE DimEmployee (&#xA;    EmployeeKey INT IDENTITY(1,1) NOT NULL PRIMARY KEY,&#xA;    EmployeeID INT NOT NULL,&#xA;    EmployeeName VARCHAR(40) NOT NULL,&#xA;    EmployeeTitle VARCHAR(30) NOT NULL,&#xA;    RowIsCurrent INT DEFAULT 1 NOT NULL,&#xA;    RowStartDate DATE DEFAULT '2009-01-01' NOT NULL,&#xA;    RowEndDate DATE DEFAULT '9999-12-31' NOT NULL,&#xA;    RowChangeReason VARCHAR(200) NULL&#xA;);&#xA;&#xA;&#xA;--load data in DimEmployee&#xA;&#xA;INSERT INTO DimEmployee (EmployeeID, EmployeeName, EmployeeTitle)&#xA;SELECT &#xA;&#x9;EmployeeId, &#xA;&#x9;[FirstName] + ' ' + [LastName] as EmployeeName, &#xA;&#x9;JobTitle &#xA;FROM ChinookStaging.dbo.Employees&#xA;&#xA;-- DimCustomer dimension will need to include:&#xA;CREATE TABLE DimCustomer(&#xA;    CustomerKey INT IDENTITY(1,1) NOT NULL PRIMARY KEY,&#xA;    CustomerID int not NULL,&#xA;&#x9;CustomerName VARCHAR(60) NOT NULL,&#xA;&#x9;CompanyName NVARCHAR(80) NULL,&#xA;    CustomerCity NVARCHAR(40) NULL,&#xA;    CustomerPostalCode NVARCHAR(10) NULL,&#xA;    CustomerState NVARCHAR(40) NULL,&#xA;&#x9;CustomerCountry NVARCHAR(40) NULL,&#xA;    RowIsCurrent INT DEFAULT 1 NOT NULL,&#xA;    RowStartDate DATE DEFAULT '2009-01-01' NOT NULL,&#xA;    RowEndDate DATE DEFAULT '9999-12-31' NOT NULL,&#xA;    RowChangeReason VARCHAR(200) NULL &#xA;);&#xA;&#xA;-- Load data in DimCustomer&#xA;&#xA;INSERT INTO DimCustomer(CustomerID, CustomerName, CompanyName, &#xA;CustomerCity, CustomerPostalCode, CustomerState, CustomerCountry)&#xA;SELECT &#xA;&#x9;Customerid, &#xA;&#x9;[FirstName]+' '+[LastName], &#xA;&#x9;Company, City, &#xA;&#x9;COALESCE(PostalCode,'n/a'), &#xA;&#x9;State, &#xA;&#x9;Country&#xA;FROM ChinookStaging.dbo.Customers&#xA;&#xA;-- DimTrack dimension will need to include:&#xA;CREATE TABLE DimTrack(&#xA;    TrackKey INT IDENTITY(1,1) NOT NULL PRIMARY KEY,&#xA;    TrackID INT NOT NULL,&#xA;    TrackName VARCHAR(200) NOT NULL,&#xA;&#x9;AlbumTitle VARCHAR(160) NOT NULL,&#xA;&#x9;ArtistName VARCHAR(120) NOT NULL,&#xA;&#x9;GenreName VARCHAR(120) NOT NULL,&#xA;&#x9;MediaTypeName VARCHAR(120) NOT NULL,&#xA;    RowIsCurrent INT DEFAULT 1 NOT NULL,&#xA;    RowStartDate DATE DEFAULT '2009-01-01' NOT NULL,&#xA;    RowEndDate DATE DEFAULT '9999-12-31' NOT NULL,&#xA;    RowChangeReason VARCHAR(200) NULL&#xA;);&#xA;-- Load data in DimTrack&#xA;&#xA;INSERT INTO DimTrack(Trackid, TrackName, AlbumTitle, &#xA;ArtistName, GenreName, MediaTypeName)&#xA;SELECT &#xA;&#x9;Trackid, &#xA;&#x9;Track, &#xA;&#x9;Album, &#xA;&#x9;Artist,  &#xA;&#x9;Genre, &#xA;&#x9;MediaType&#xA;FROM ChinookStaging.dbo.Tracks&#xA;&#xA;-- FactSales fact table will need to include:&#xA;CREATE TABLE FactSales(&#xA;    InvoiceKey INT IDENTITY(1,1) NOT NULL PRIMARY KEY,&#xA;&#x9;InvoiceId INT NOT NULL,&#xA;    TrackKey INT NOT NULL,&#xA;    CustomerKey INT NOT NULL,&#xA;&#x9;EmployeeKey INT NOT NULL,&#xA;&#x9;InvoiceDateKey INT NOT NULL,&#xA;   &#x9;UnitPrice FLOAT DEFAULT 0 NOT NULL,&#xA;);&#xA;&#xA;-- Load data in FactSales&#xA;&#xA;INSERT INTO FactSales (&#xA;    InvoiceId, TrackKey, CustomerKey, EmployeeKey, InvoiceDateKey, UnitPrice&#xA;)&#xA;SELECT&#xA;    s.InvoiceId,&#xA;    t.TrackKey,&#xA;    c.CustomerKey,&#xA;    e.EmployeeKey,&#xA;    CAST(FORMAT(s.InvoiceDate, 'yyyyMMdd') AS INT),&#xA;    s.UnitPrice&#xA;FROM&#xA;    ChinookStaging.dbo.Sales AS s&#xA;JOIN [ChinookDW].[dbo].[DimEmployee] AS e ON e.EmployeeID = s.EmployeeID&#xA;JOIN [ChinookDW].[dbo].[DimCustomer] AS c ON c.CustomerID = s.CustomerID&#xA;JOIN [ChinookDW].[dbo].[DimTrack] AS t ON t.TrackID = s.TrackID;&#xA;&#xA;&#xA;--Creating the date dimension as a TABLE in MSSQL&#xA;--Provides the UK and USA holidays&#xA;--Specify Start Date and End date here&#xA;--Value of Start Date Must be Less than Your End Date&#xA;&#xA;DECLARE @StartDate DATETIME = '2009-01-01' --Starting value of Date Range&#xA;DECLARE @EndDate DATETIME = '2013-12-22' --End Value of Date Range&#xA;&#xA;--SELECT DATEPART(QQ  , Getdate()) as DayOfMonthValue&#xA;--SELECT CONVERT (char(8),Getdate(),112)&#xA;&#xA;--DATEPART(DW, @CurrentDate)&#xA;--SELECT CONVERT (char(10),Getdate(),103)&#xA;--SELECT DATENAME(DW, '16-aug-2013') AS DayName&#xA;--SELECT DATEPART(DW, '16-aug-2013') AS DayNumber&#xA;&#xA;--SELECT DATEPART(WW, '16-aug-2013') AS WeekOfYear&#xA;&#xA;DROP TABLE IF EXISTS [dbo].[DimDate]&#xA;&#xA;/**********************************************************************************/&#xA;&#xA;CREATE TABLE [dbo].[DimDate]&#xA;    ([DateKey] INT primary key,&#xA;        [Date] DATETIME,&#xA;        [FullDateUK] CHAR(10), -- Date in dd-MM-yyyy format&#xA;        [FullDateUSA] CHAR(10),-- Date in MM-dd-yyyy format&#xA;        [DayOfMonth] VARCHAR(2), -- Field will hold day number of Month&#xA;        [DaySuffix] VARCHAR(4), -- Apply suffix as 1st, 2nd ,3rd etc&#xA;        [DayName] VARCHAR(9), -- Contains name of the day, Sunday, Monday&#xA;        [DayOfWeekUSA] CHAR(1),-- First Day Sunday=1 and Saturday=7&#xA;        [DayOfWeekUK] CHAR(1),-- First Day Monday=1 and Sunday=7&#xA;        [DayOfWeekInMonth] VARCHAR(2), --1st Monday or 2nd Monday in Month&#xA;        [DayOfWeekInYear] VARCHAR(2),&#xA;        [DayOfQuarter] VARCHAR(3),&#xA;        [DayOfYear] VARCHAR(3),&#xA;        [WeekOfMonth] VARCHAR(1),-- Week Number of Month&#xA;        [WeekOfQuarter] VARCHAR(2), --Week Number of the Quarter&#xA;        [WeekOfYear] VARCHAR(2),--Week Number of the Year&#xA;        [Month] VARCHAR(2), --Number of the Month 1 to 12&#xA;        [MonthName] VARCHAR(9),--January, February etc&#xA;        [MonthOfQuarter] VARCHAR(2),-- Month Number belongs to Quarter&#xA;        [Quarter] CHAR(1),&#xA;        [QuarterName] VARCHAR(9),--First,Second..&#xA;        [Year] CHAR(4),-- Year value of Date stored in Row&#xA;        [YearName] CHAR(7), --CY 2012,CY 2013&#xA;        [MonthYear] CHAR(10), --Jan-2013,Feb-2013&#xA;        [MMYYYY] CHAR(6),&#xA;        [FirstDayOfMonth] DATE,&#xA;        [LastDayOfMonth] DATE,&#xA;        [FirstDayOfQuarter] DATE,&#xA;        [LastDayOfQuarter] DATE,&#xA;        [FirstDayOfYear] DATE,&#xA;        [LastDayOfYear] DATE,&#xA;        [IsHolidayUSA] BIT,-- Flag 1=National Holiday, 0-No National Holiday&#xA;        [IsWeekday] BIT,-- 0=Week End ,1=Week Day&#xA;        [HolidayUSA] VARCHAR(50),--Name of Holiday in US&#xA;        [IsHolidayUK] BIT Null, -- Flag 1=National Holiday, 0-No National Holiday&#xA;        [HolidayUK] VARCHAR(50) Null --Name of Holiday in UK&#xA;    )&#xA;;&#xA;&#xA;&#xA;/********************************************************************************************/&#xA;&#xA;&#xA;--Temporary Variables To Hold the Values During Processing of Each Date of Year&#xA;DECLARE&#xA;    @DayOfWeekInMonth INT,&#xA;    @DayOfWeekInYear INT,&#xA;    @DayOfQuarter INT,&#xA;    @WeekOfMonth INT,&#xA;    @CurrentYear INT,&#xA;    @CurrentMonth INT,&#xA;    @CurrentQuarter INT&#xA;&#xA;/*TABLE Data type to store the day of week count for the month and year*/&#xA;DECLARE @DayOfWeek TABLE (DOW INT, MonthCount INT, QuarterCount INT, YearCount INT)&#xA;&#xA;INSERT INTO @DayOfWeek VALUES (1, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (2, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (3, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (4, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (5, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (6, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (7, 0, 0, 0)&#xA;&#xA;--Extract and assign part of Values FROM Current Date to Variable&#xA;&#xA;DECLARE @CurrentDate AS DATETIME = @StartDate&#xA;SET @CurrentMonth = DATEPART(MM, @CurrentDate)&#xA;SET @CurrentYear = DATEPART(YY, @CurrentDate)&#xA;SET @CurrentQuarter = DATEPART(QQ, @CurrentDate)&#xA;&#xA;/********************************************************************************************/&#xA;--Proceed only if Start Date(Current date) is less than End date you specified above&#xA;&#xA;WHILE @CurrentDate &lt;= @EndDate&#xA;BEGIN&#xA;&#xA;/*Begin day of week logic*/&#xA;&#xA;         /*Check for Change in Month of the Current date if Month changed then&#xA;          Change variable value*/&#xA;    IF @CurrentMonth != DATEPART(MM, @CurrentDate)&#xA;    BEGIN&#xA;        UPDATE @DayOfWeek&#xA;        SET MonthCount = 0&#xA;        SET @CurrentMonth = DATEPART(MM, @CurrentDate)&#xA;    END&#xA;&#xA;        --&#xA;        /* Check for Change in Quarter of the Current date if Quarter changed then change&#xA;         Variable value*/&#xA;&#xA;    IF @CurrentQuarter != DATEPART(QQ, @CurrentDate)&#xA;    BEGIN&#xA;        UPDATE @DayOfWeek&#xA;        SET QuarterCount = 0&#xA;        SET @CurrentQuarter = DATEPART(QQ, @CurrentDate)&#xA;    END&#xA;&#xA;        /* Check for Change in Year of the Current date if Year changed then change&#xA;         Variable value*/&#xA;&#xA;&#xA;    IF @CurrentYear != DATEPART(YY, @CurrentDate)&#xA;    BEGIN&#xA;        UPDATE @DayOfWeek&#xA;        SET YearCount = 0&#xA;        SET @CurrentYear = DATEPART(YY, @CurrentDate)&#xA;    END&#xA;&#xA;        -- Set values in TABLE data type created above FROM variables&#xA;&#xA;    UPDATE @DayOfWeek&#xA;    SET&#xA;        MonthCount = MonthCount + 1,&#xA;        QuarterCount = QuarterCount + 1,&#xA;        YearCount = YearCount + 1&#xA;    WHERE DOW = DATEPART(DW, @CurrentDate)&#xA;&#xA;    SELECT&#xA;        @DayOfWeekInMonth = MonthCount,&#xA;        @DayOfQuarter = QuarterCount,&#xA;        @DayOfWeekInYear = YearCount&#xA;    FROM @DayOfWeek&#xA;    WHERE DOW = DATEPART(DW, @CurrentDate)&#xA;&#xA;/*End day of week logic*/&#xA;&#xA;&#xA;/* Populate Your Dimension TABLE with values*/&#xA;&#xA;    INSERT INTO [dbo].[DimDate]&#xA;    SELECT&#xA;&#xA;        CONVERT (char(8),@CurrentDate,112) as DateKey,&#xA;        @CurrentDate AS Date,&#xA;        CONVERT (char(10),@CurrentDate,103) as FullDateUK,&#xA;        CONVERT (char(10),@CurrentDate,101) as FullDateUSA,&#xA;        DATEPART(DD, @CurrentDate) AS DayOfMonth,&#xA;        --Apply Suffix values like 1st, 2nd 3rd etc..&#xA;        CASE&#xA;            WHEN DATEPART(DD,@CurrentDate) IN (11,12,13) THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'th'&#xA;            WHEN RIGHT(DATEPART(DD,@CurrentDate),1) = 1 THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'st'&#xA;            WHEN RIGHT(DATEPART(DD,@CurrentDate),1) = 2 THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'nd'&#xA;            WHEN RIGHT(DATEPART(DD,@CurrentDate),1) = 3 THEN CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'rd'&#xA;            ELSE CAST(DATEPART(DD,@CurrentDate) AS VARCHAR) + 'th'&#xA;            END AS DaySuffix,&#xA;&#xA;        DATENAME(DW, @CurrentDate) AS DayName,&#xA;        DATEPART(DW, @CurrentDate) AS DayOfWeekUSA,&#xA;        -- check for day of week as Per US and change it as per UK format&#xA;        CASE DATEPART(DW, @CurrentDate)&#xA;            WHEN 1 THEN 7&#xA;            WHEN 2 THEN 1&#xA;            WHEN 3 THEN 2&#xA;            WHEN 4 THEN 3&#xA;            WHEN 5 THEN 4&#xA;            WHEN 6 THEN 5&#xA;            WHEN 7 THEN 6&#xA;            END&#xA;            AS DayOfWeekUK,&#xA;&#xA;        @DayOfWeekInMonth AS DayOfWeekInMonth,&#xA;        @DayOfWeekInYear AS DayOfWeekInYear,&#xA;        @DayOfQuarter AS DayOfQuarter,&#xA;        DATEPART(DY, @CurrentDate) AS DayOfYear,&#xA;        DATEPART(WW, @CurrentDate) + 1 - DATEPART(WW, CONVERT(VARCHAR, DATEPART(MM, @CurrentDate)) + '/1/' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate))) AS WeekOfMonth,&#xA;        (DATEDIFF(DD, DATEADD(QQ, DATEDIFF(QQ, 0, @CurrentDate), 0), @CurrentDate) / 7) + 1 AS WeekOfQuarter,&#xA;        DATEPART(WW, @CurrentDate) AS WeekOfYear,&#xA;        DATEPART(MM, @CurrentDate) AS Month,&#xA;        DATENAME(MM, @CurrentDate) AS MonthName,&#xA;        CASE&#xA;            WHEN DATEPART(MM, @CurrentDate) IN (1, 4, 7, 10) THEN 1&#xA;            WHEN DATEPART(MM, @CurrentDate) IN (2, 5, 8, 11) THEN 2&#xA;            WHEN DATEPART(MM, @CurrentDate) IN (3, 6, 9, 12) THEN 3&#xA;            END AS MonthOfQuarter,&#xA;        DATEPART(QQ, @CurrentDate) AS Quarter,&#xA;        CASE DATEPART(QQ, @CurrentDate)&#xA;            WHEN 1 THEN 'First'&#xA;            WHEN 2 THEN 'Second'&#xA;            WHEN 3 THEN 'Third'&#xA;            WHEN 4 THEN 'Fourth'&#xA;            END AS QuarterName,&#xA;        DATEPART(YEAR, @CurrentDate) AS Year,&#xA;        'CY ' + CONVERT(VARCHAR, DATEPART(YEAR, @CurrentDate)) AS YearName,&#xA;        LEFT(DATENAME(MM, @CurrentDate), 3) + '-' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate)) AS MonthYear,&#xA;        RIGHT('0' + CONVERT(VARCHAR, DATEPART(MM, @CurrentDate)),2) + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate)) AS MMYYYY,&#xA;        CONVERT(DATETIME, CONVERT(DATE, DATEADD(DD, - (DATEPART(DD, @CurrentDate) - 1), @CurrentDate))) AS FirstDayOfMonth,&#xA;        CONVERT(DATETIME, CONVERT(DATE, DATEADD(DD, - (DATEPART(DD, (DATEADD(MM, 1, @CurrentDate)))), DATEADD(MM, 1, @CurrentDate)))) AS LastDayOfMonth,&#xA;        DATEADD(QQ, DATEDIFF(QQ, 0, @CurrentDate), 0) AS FirstDayOfQuarter,&#xA;        DATEADD(QQ, DATEDIFF(QQ, -1, @CurrentDate), -1) AS LastDayOfQuarter,&#xA;        CONVERT(DATETIME, '01/01/' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate))) AS FirstDayOfYear,&#xA;        CONVERT(DATETIME, '12/22/' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate))) AS LastDayOfYear,&#xA;        NULL AS IsHolidayUSA,&#xA;        CASE DATEPART(DW, @CurrentDate)&#xA;            WHEN 1 THEN 0&#xA;            WHEN 2 THEN 1&#xA;            WHEN 3 THEN 1&#xA;            WHEN 4 THEN 1&#xA;            WHEN 5 THEN 1&#xA;            WHEN 6 THEN 1&#xA;            WHEN 7 THEN 0&#xA;            END AS IsWeekday,&#xA;        NULL AS HolidayUSA, Null, Null&#xA;&#xA;    SET @CurrentDate = DATEADD(DD, 1, @CurrentDate)&#xA;END&#xA;&#xA;&#xA;&#xA;&#xA;/* Add HOLIDAYS UK */&#xA;/* For Easter, you should do this for every year INDIVIDUALLY */&#xA;/* For now we assume that these dates are always on the same date */&#xA;&#xA;-- Good Friday  April 18&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK = 'Good Friday'&#xA;    WHERE [Month] = 4 AND [DayOfMonth]  = 18&#xA;-- Easter Monday  April 21&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK = 'Easter Monday'&#xA;    WHERE [Month] = 4 AND [DayOfMonth]  = 21&#xA;-- Early May Bank Holiday   May 5&#xA;   UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK = 'Early May Bank Holiday'&#xA;    WHERE [Month] = 5 AND [DayOfMonth]  = 5&#xA;-- Spring Bank Holiday  May 26&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK = 'Spring Bank Holiday'&#xA;    WHERE [Month] = 5 AND [DayOfMonth]  = 26&#xA;-- Summer Bank Holiday  August 25&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK = 'Summer Bank Holiday'&#xA;    WHERE [Month] = 8 AND [DayOfMonth]  = 25&#xA;-- Boxing Day  December 26&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK = 'Boxing Day'&#xA;    WHERE [Month] = 12 AND [DayOfMonth]  = 26&#xA;--CHRISTMAS&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK = 'Christmas Day'&#xA;    WHERE [Month] = 12 AND [DayOfMonth]  = 25&#xA;--New Years Day&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUK  = 'New Year''s Day'&#xA;    WHERE [Month] = 1 AND [DayOfMonth] = 1&#xA;&#xA;    UPDATE [dbo].[DimDate]&#xA;    SET IsHolidayUK = CASE WHEN HolidayUK IS NULL THEN 0 WHEN HolidayUK IS NOT NULL THEN 1 END&#xA;&#xA;&#xA;    /*Add HOLIDAYS USA*/&#xA;    /*THANKSGIVING - Fourth THURSDAY in November*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Thanksgiving Day'&#xA;    WHERE&#xA;        [Month] = 11&#xA;        AND [DayOfWeekUSA] = 'Thursday'&#xA;        AND DayOfWeekInMonth = 4&#xA;&#xA;    /*CHRISTMAS*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Christmas Day'&#xA;&#xA;    WHERE [Month] = 12 AND [DayOfMonth]  = 25&#xA;&#xA;    /*4th of July*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Independance Day'&#xA;    WHERE [Month] = 7 AND [DayOfMonth] = 4&#xA;&#xA;    /*New Years Day*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'New Year''s Day'&#xA;    WHERE [Month] = 1 AND [DayOfMonth] = 1&#xA;&#xA;    /*Memorial Day - Last Monday in May*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Memorial Day'&#xA;    FROM [dbo].[DimDate]&#xA;    WHERE DateKey IN&#xA;        (&#xA;        SELECT&#xA;            MAX(DateKey)&#xA;        FROM [dbo].[DimDate]&#xA;        WHERE&#xA;            [MonthName] = 'May'&#xA;            AND [DayOfWeekUSA]  = 'Monday'&#xA;        GROUP BY&#xA;            [Year],&#xA;            [Month]&#xA;        )&#xA;&#xA;    /*Labor Day - First Monday in September*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Labor Day'&#xA;    FROM [dbo].[DimDate]&#xA;    WHERE DateKey IN&#xA;        (&#xA;        SELECT&#xA;            MIN(DateKey)&#xA;        FROM [dbo].[DimDate]&#xA;        WHERE&#xA;            [MonthName] = 'September'&#xA;            AND [DayOfWeekUSA] = 'Monday'&#xA;        GROUP BY&#xA;            [Year],&#xA;            [Month]&#xA;        )&#xA;&#xA;    /*Valentine's Day*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Valentine''s Day'&#xA;    WHERE&#xA;        [Month] = 2&#xA;        AND [DayOfMonth] = 14&#xA;&#xA;    /*Saint Patrick's Day*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Saint Patrick''s Day'&#xA;    WHERE&#xA;        [Month] = 3&#xA;        AND [DayOfMonth] = 17&#xA;&#xA;    /*Martin Luthor King Day - Third Monday in January starting in 1983*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Martin Luthor King Jr Day'&#xA;    WHERE&#xA;        [Month] = 1&#xA;        AND [DayOfWeekUSA]  = 'Monday'&#xA;        AND [Year] &gt;= 1983&#xA;        AND DayOfWeekInMonth = 3&#xA;&#xA;    /*President's Day - Third Monday in February*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'President''s Day'&#xA;    WHERE&#xA;        [Month] = 2&#xA;        AND [DayOfWeekUSA] = 'Monday'&#xA;        AND DayOfWeekInMonth = 3&#xA;&#xA;    /*Mother's Day - Second Sunday of May*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Mother''s Day'&#xA;    WHERE&#xA;        [Month] = 5&#xA;        AND [DayOfWeekUSA] = 'Sunday'&#xA;        AND DayOfWeekInMonth = 2&#xA;&#xA;    /*Father's Day - Third Sunday of June*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Father''s Day'&#xA;    WHERE&#xA;        [Month] = 6&#xA;        AND [DayOfWeekUSA] = 'Sunday'&#xA;        AND DayOfWeekInMonth = 3&#xA;&#xA;    /*Halloween 10/31*/&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET HolidayUSA = 'Halloween'&#xA;    WHERE&#xA;        [Month] = 10&#xA;        AND [DayOfMonth] = 31&#xA;&#xA;    /*Election Day - The first Tuesday after the first Monday in November*/&#xA;    BEGIN&#xA;        DECLARE @Holidays TABLE (ID INT IDENTITY(1,1), DateID INT, Week TINYINT, YEAR CHAR(4), DAY CHAR(2))&#xA;&#xA;        INSERT INTO @Holidays(DateID, [Year],[Day])&#xA;        SELECT&#xA;            DateKey,&#xA;            [Year],&#xA;            [DayOfMonth]&#xA;        FROM [dbo].[DimDate]&#xA;        WHERE&#xA;            [Month] = 11&#xA;            AND [DayOfWeekUSA] = 'Monday'&#xA;        ORDER BY&#xA;            YEAR,&#xA;            DayOfMonth&#xA;&#xA;        DECLARE @CNTR INT, @POS INT, @STARTYEAR INT, @ENDYEAR INT, @MINDAY INT&#xA;&#xA;        SELECT&#xA;            @CURRENTYEAR = MIN([Year])&#xA;            , @STARTYEAR = MIN([Year])&#xA;            , @ENDYEAR = MAX([Year])&#xA;        FROM @Holidays&#xA;&#xA;        WHILE @CURRENTYEAR &lt;= @ENDYEAR&#xA;        BEGIN&#xA;            SELECT @CNTR = COUNT([Year])&#xA;            FROM @Holidays&#xA;            WHERE [Year] = @CURRENTYEAR&#xA;&#xA;            SET @POS = 1&#xA;&#xA;            WHILE @POS &lt;= @CNTR&#xA;            BEGIN&#xA;                SELECT @MINDAY = MIN(DAY)&#xA;                FROM @Holidays&#xA;                WHERE&#xA;                    [Year] = @CURRENTYEAR&#xA;                    AND [Week] IS NULL&#xA;&#xA;                UPDATE @Holidays&#xA;                    SET [Week] = @POS&#xA;                WHERE&#xA;                    [Year] = @CURRENTYEAR&#xA;                    AND [Day] = @MINDAY&#xA;&#xA;                SELECT @POS = @POS + 1&#xA;            END&#xA;&#xA;            SELECT @CURRENTYEAR = @CURRENTYEAR + 1&#xA;        END&#xA;&#xA;        UPDATE [dbo].[DimDate]&#xA;            SET HolidayUSA  = 'Election Day'&#xA;        FROM [dbo].[DimDate] DT&#xA;            JOIN @Holidays HL ON (HL.DateID + 1) = DT.DateKey&#xA;        WHERE&#xA;            [Week] = 1&#xA;    END&#xA;&#xA;    UPDATE [dbo].[DimDate]&#xA;        SET IsHolidayUSA = CASE WHEN HolidayUSA  IS NULL THEN 0 WHEN HolidayUSA  IS NOT NULL THEN 1 END&#xA;&#xA;/*******************************************************************************************************************************************************/&#xA;&#xA;-- Relationships&#xA;&#xA;ALTER TABLE [dbo].[FactSales] ADD  constraint [FactSalesDimDate] FOREIGN KEY (InvoiceDateKey)&#xA;    REFERENCES DimDate(DateKey);&#xA;&#xA;ALTER TABLE [dbo].[FactSales] ADD  constraint [FactSalesDimCustomer]  FOREIGN KEY (CustomerKey)&#xA;    REFERENCES DimCustomer ([CustomerKey]);&#xA;&#xA;ALTER TABLE [dbo].[FactSales] ADD  constraint [FactSalesDimEmployee] FOREIGN KEY (EmployeeKey)&#xA;    REFERENCES DimEmployee (EmployeeKey);&#xA;&#xA;ALTER TABLE [dbo].[FactSales] ADD constraint [FactSalesDimTrack] FOREIGN KEY ([TrackKey])&#xA;    REFERENCES [dbo].[DimTrack] (TrackKey);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Staging"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{58CC1463-432A-4020-AC67-819D682F1D28}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Staging"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CD516DD4-880F-4EBD-BBA6-69CBC5D92280}"
          SQLTask:SqlStatementSource="USE master&#xA;GO&#xA;if exists (select * from sysdatabases where name='ChinookStaging')&#xA;&#x9;&#x9;alter database ChinookStaging set single_user with rollback immediate&#xA;&#x9;&#x9;drop database ChinookStaging&#xA;go&#xA;&#xA;CREATE DATABASE ChinookStaging&#xA;GO&#xA;&#xA;USE ChinookStaging&#xA;GO&#xA;&#xA;DROP TABLE IF EXISTS ChinookStaging.dbo.Sales&#xA;DROP TABLE IF EXISTS ChinookStaging.dbo.Customers&#xA;DROP TABLE IF EXISTS ChinookStaging.dbo.Employees&#xA;DROP TABLE IF EXISTS ChinookStaging.dbo.Tracks&#xA;&#xA;--1. get data FROM Employee&#xA;--  EmployeeID,   FirstName,  LastName, JobTitle &#xA;&#xA;SELECT &#xA;&#x9;Employeeid, &#xA;&#x9;FirstName, &#xA;&#x9;LastName, &#xA;&#x9;Title as JobTitle&#xA;INTO ChinookStaging.dbo.Employees&#xA;FROM Chinook.[dbo].[Employee]&#xA;&#xA;--2 get data FROM Customer&#xA;-- CustomerID, FirstName, LastName, Company, City, PostalCode, State, Country&#xA;&#xA;SELECT  Customerid, FirstName, LastName, Company, City, PostalCode, State, Country&#xA;INTO ChinookStaging.dbo.Customers&#xA;FROM Chinook.[dbo].[Customer]&#xA;&#xA;--3  get FROM Track&#xA; -- TrackID, TrackName, AlbumName, ArtistName, PlaylistName, GenreName, MediaTypeName, UnitPrice&#xA;&#xA;&#xA;-- 3 get FROM Track&#xA;-- TrackID, TrackName, AlbumName, ArtistName, PlaylistName, GenreName, MediaTypeName&#xA;&#xA;SELECT &#xA;    [Track].TrackId, &#xA;    [Track].Name as Track, &#xA;    ISNULL([Album].[Title], 'N/A') as Album, &#xA;    ISNULL([Artist].Name, 'N/A') as Artist, &#xA;    ISNULL([Genre].Name, 'N/A') as Genre, &#xA;    ISNULL([MediaType].Name, 'N/A') as MediaType&#xA;INTO ChinookStaging.dbo.Tracks&#xA;FROM Chinook.[dbo].[Track]&#xA;LEFT JOIN Chinook.[dbo].[Album]&#xA;    ON Chinook.[dbo].Track.AlbumId = Chinook.[dbo].Album.AlbumId&#xA;LEFT JOIN Chinook.[dbo].[Artist]&#xA;    ON Chinook.[dbo].Track.AlbumId = Chinook.[dbo].Artist.ArtistId&#xA;LEFT JOIN Chinook.[dbo].Genre&#xA;    ON Chinook.[dbo].Track.GenreId = Chinook.[dbo].Genre.GenreId&#xA;LEFT JOIN Chinook.[dbo].MediaType&#xA;    ON Chinook.[dbo].Track.MediaTypeId = Chinook.[dbo].MediaType.MediaTypeId&#xA;&#xA;&#xA;&#xA;--4  get FROM InvoiceLine&#xA;-- InvoiceId, TrackId, CustomerId, EmployeeId, InvoiceDate, BillingCountry, UnitPrice&#xA;&#xA;SELECT &#xA;&#x9;[InvoiceLine].InvoiceId, &#xA;&#x9;[InvoiceLine].TrackId, &#xA;&#x9;[Invoice].CustomerId, &#xA;&#x9;EmployeeId, &#xA;&#x9;InvoiceDate,  &#xA;&#x9;[InvoiceLine].UnitPrice&#xA;INTO ChinookStaging.dbo.Sales&#xA;FROM Chinook.[dbo].[InvoiceLine] &#xA;INNER JOIN Chinook.[dbo].[Invoice] ON Chinook.[dbo].InvoiceLine.InvoiceId = Chinook.[dbo].Invoice.InvoiceId&#xA;INNER JOIN Chinook.[dbo].Track ON Chinook.[dbo].InvoiceLine.TrackId = Chinook.[dbo].Track.TrackId&#xA;INNER JOIN Chinook.[dbo].[Customer] ON Chinook.[dbo].[Invoice].[CustomerId]=Chinook.[dbo].Customer.CustomerId&#xA;INNER JOIN Chinook.[dbo].[Employee] ON Chinook.[dbo].[Customer].[SupportRepId]=Chinook.[dbo].[Employee].[EmployeeId]&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{37CCF61B-4F3E-4E47-A43D-6045C63310E8}"
      DTS:From="Package\Staging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DW" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{E3269B1A-2E34-4D9D-8C9F-B17D0E37D15A}"
      DTS:From="Package\DW"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\delta loading" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\delta loading"
          TopLeft="277.142857732821,200.352941000853" />
        <NodeLayout
          Size="95.2,41.6"
          Id="Package\DW"
          TopLeft="422.857143757295,126.176470477637" />
        <NodeLayout
          Size="113.6,41.6"
          Id="Package\Staging"
          TopLeft="342.142857871189,29.8235293856232" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="398.942857871189,71.4235293856232">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71.5142858861054,54.7529410920135"
              Start="0,0"
              End="71.5142858861054,47.2529410920135">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3764705460068" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.3764705460068"
                    Point2="0,27.3764705460068"
                    Point3="4,27.3764705460068" />
                  <mssgle:LineSegment
                    End="67.5142858861054,27.3764705460068" />
                  <mssgle:CubicBezierSegment
                    Point1="67.5142858861054,27.3764705460068"
                    Point2="71.5142858861054,27.3764705460068"
                    Point3="71.5142858861054,31.3764705460068" />
                  <mssgle:LineSegment
                    End="71.5142858861054,47.2529410920135" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="470.457143757295,167.776470477637">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-123.714286024473,32.5764705232167"
              Start="0,0"
              End="-123.714286024473,25.0764705232167">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.2882352616084" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.2882352616084"
                    Point2="0,16.2882352616084"
                    Point3="-4,16.2882352616084" />
                  <mssgle:LineSegment
                    End="-119.714286024473,16.2882352616084" />
                  <mssgle:CubicBezierSegment
                    Point1="-119.714286024473,16.2882352616084"
                    Point2="-123.714286024473,16.2882352616084"
                    Point3="-123.714286024473,20.2882352616084" />
                  <mssgle:LineSegment
                    End="-123.714286024473,25.0764705232167" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>